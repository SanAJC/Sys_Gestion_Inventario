trigger:
- main

pool:
  name: 'Default'

strategy:
  matrix:
    Python312:
      PYTHON_VERSION: '3.12.10'
  maxParallel: 1

steps:
# 1) Preparar venv e instalar dependencias
- script: |
    python -m venv .venv
    call .venv\Scripts\Activate.bat
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Preparar venv e instalar dependencias'

# 2) Ejecutar tests
- script: |
    call .venv\Scripts\activate
    python manage.py test
  displayName: 'Ejecutar tests en venv'

# 3) Migraciones y staticfiles (opcional antes del deploy)
- script: |
    call .venv\Scripts\activate
    python manage.py migrate --no-input
    python manage.py collectstatic --no-input
  displayName: 'Migraciones y collectstatic'

# 4) Desplegar a App Service con Publish Profile
- task: AzureWebApp@1
  displayName: 'Desplegar a Azure App Service'
  inputs:
    azureSubscription: 'connection-gestion-inventario'
    appType: 'webAppLinux'
    appName: 'gestion-inventario-dj'
    package: '.'
